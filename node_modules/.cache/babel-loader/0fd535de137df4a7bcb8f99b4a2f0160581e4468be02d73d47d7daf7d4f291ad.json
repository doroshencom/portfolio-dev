{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dorosken\\\\Proyects\\\\portfolio\\\\src\\\\components\\\\ProjectGrid.js\";\nimport React from 'react';\nimport './ProjectGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectGrid = () => {\n  const projects = [{\n    type: 'image',\n    src: '/assets/images/project1.jpg',\n    link: 'https://example.com/project1',\n    title: 'PACS',\n    description: 'Context information and anatomical guidance fully integrated'\n  }, {\n    type: 'video',\n    src: '/assets/videos/project2.mp4',\n    link: 'https://example.com/project2',\n    title: 'Radiologists',\n    description: 'Quantitative information on osteoporosis at the spine'\n  }, {\n    type: 'image',\n    src: '/assets/images/project3.jpg',\n    link: 'https://example.com/project3',\n    title: 'Clinicians',\n    description: 'Identifying patients at risk at one glance'\n  }, {\n    type: 'video',\n    src: '/assets/videos/project4.mp4',\n    link: 'https://example.com/project4',\n    title: 'Research',\n    description: 'Spine segmentation and landmark detection for bone research'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: project.link,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"grid-item\",\n      children: [project.type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: project.src,\n        alt: `Project ${index + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        src: project.src,\n        autoPlay: true,\n        muted: true,\n        loop: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-title glitch\",\n        \"data-text\": project.title,\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: project.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = ProjectGrid;\nexport default ProjectGrid;\nvar _c;\n$RefreshReg$(_c, \"ProjectGrid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProjectGrid","projects","type","src","link","title","description","className","children","map","project","index","href","target","rel","alt","fileName","_jsxFileName","lineNumber","columnNumber","autoPlay","muted","loop","_c","$RefreshReg$"],"sources":["C:/Users/Dorosken/Proyects/portfolio/src/components/ProjectGrid.js"],"sourcesContent":["import React from 'react';\nimport './ProjectGrid.css';\n\nconst ProjectGrid = () => {\n  const projects = [\n    { \n      type: 'image', \n      src: '/assets/images/project1.jpg', \n      link: 'https://example.com/project1', \n      title: 'PACS', \n      description: 'Context information and anatomical guidance fully integrated' \n    },\n    { \n      type: 'video', \n      src: '/assets/videos/project2.mp4', \n      link: 'https://example.com/project2', \n      title: 'Radiologists', \n      description: 'Quantitative information on osteoporosis at the spine' \n    },\n    { \n      type: 'image', \n      src: '/assets/images/project3.jpg', \n      link: 'https://example.com/project3', \n      title: 'Clinicians', \n      description: 'Identifying patients at risk at one glance' \n    },\n    { \n      type: 'video', \n      src: '/assets/videos/project4.mp4', \n      link: 'https://example.com/project4', \n      title: 'Research', \n      description: 'Spine segmentation and landmark detection for bone research' \n    },\n  ];\n\n  return (\n    <div className=\"grid-container\">\n      {projects.map((project, index) => (\n        <a\n          key={index}\n          href={project.link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"grid-item\"\n        >\n          {project.type === 'image' ? (\n            <img src={project.src} alt={`Project ${index + 1}`} />\n          ) : (\n            <video src={project.src} autoPlay muted loop />\n          )}\n          <div className=\"project-title glitch\" data-text={project.title}>\n            {project.title}\n          </div>\n          <p>{project.description}</p>\n        </a>\n      ))}\n    </div>\n  );\n};\n\nexport default ProjectGrid;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,QAAQ,GAAG,CACf;IACEC,IAAI,EAAE,OAAO;IACbC,GAAG,EAAE,6BAA6B;IAClCC,IAAI,EAAE,8BAA8B;IACpCC,KAAK,EAAE,MAAM;IACbC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,IAAI,EAAE,OAAO;IACbC,GAAG,EAAE,6BAA6B;IAClCC,IAAI,EAAE,8BAA8B;IACpCC,KAAK,EAAE,cAAc;IACrBC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,IAAI,EAAE,OAAO;IACbC,GAAG,EAAE,6BAA6B;IAClCC,IAAI,EAAE,8BAA8B;IACpCC,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE;EACf,CAAC,EACD;IACEJ,IAAI,EAAE,OAAO;IACbC,GAAG,EAAE,6BAA6B;IAClCC,IAAI,EAAE,8BAA8B;IACpCC,KAAK,EAAE,UAAU;IACjBC,WAAW,EAAE;EACf,CAAC,CACF;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BP,QAAQ,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BZ,OAAA;MAEEa,IAAI,EAAEF,OAAO,CAACN,IAAK;MACnBS,MAAM,EAAC,QAAQ;MACfC,GAAG,EAAC,qBAAqB;MACzBP,SAAS,EAAC,WAAW;MAAAC,QAAA,GAEpBE,OAAO,CAACR,IAAI,KAAK,OAAO,gBACvBH,OAAA;QAAKI,GAAG,EAAEO,OAAO,CAACP,GAAI;QAACY,GAAG,EAAE,WAAWJ,KAAK,GAAG,CAAC;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEtDpB,OAAA;QAAOI,GAAG,EAAEO,OAAO,CAACP,GAAI;QAACiB,QAAQ;QAACC,KAAK;QAACC,IAAI;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC/C,eACDpB,OAAA;QAAKQ,SAAS,EAAC,sBAAsB;QAAC,aAAWG,OAAO,CAACL,KAAM;QAAAG,QAAA,EAC5DE,OAAO,CAACL;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACNpB,OAAA;QAAAS,QAAA,EAAIE,OAAO,CAACJ;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAdvBR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeT,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACI,EAAA,GAvDIvB,WAAW;AAyDjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}